const declarations = require("./declarations");

module.exports = [    
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 20 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.NormalRun, 2 * 1000, declarations.Pace.Normal, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 3 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.LongRun, 5 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 20 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.FastRun, 1 * 1000, declarations.Pace.High, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 3 * 1000, declarations.Pace.Low, 30 * 60),
    declarations.getRunningModel(declarations.Type.LongRun, 6 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 30 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.NormalRun, 3 * 1000, declarations.Pace.Normal, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 5 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.LongRun, 9 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 40 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.FastRun, 2 * 1000, declarations.Pace.High, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 40 * 60),
    declarations.getRunningModel(declarations.Type.LongRun, 12 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 30 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.NormalRun, 4 * 1000, declarations.Pace.Normal, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 6 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.LongRun, 12 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 40 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.FastRun, 3 * 1000, declarations.Pace.High, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 7 * 1000, declarations.Pace.Low, 40 * 60),
    declarations.getRunningModel(declarations.Type.LongRun, 13 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 40 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.NormalRun, 6 * 1000, declarations.Pace.Normal, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 6 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.LongRun, 14 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 40 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.FastRun, 3 * 1000, declarations.Pace.High, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 45 * 60),
    declarations.getRunningModel(declarations.Type.LongRun, 14 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 10 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.NormalRun, 7 * 1000, declarations.Pace.Normal, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 8 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.LongRun, 16 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 14 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.FastRun, 4 * 1000, declarations.Pace.High, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 8 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.LongRun, 16 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 15 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.NormalRun, 8 * 1000, declarations.Pace.Normal, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 60 * 60),
    declarations.getRunningModel(declarations.Type.LongRun, 20 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 15 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.FastRun, 4 * 1000, declarations.Pace.Normal, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 60 * 60),
    declarations.getRunningModel(declarations.Type.LongRun, 20 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, 17 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.NormalRun, 9 * 1000, declarations.Pace.Normal, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 70 * 60),
    declarations.getRunningModel(declarations.Type.LongRun, 23 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 80 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.FastRun, 4 * 1000, declarations.Pace.High, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 80 * 60),
    declarations.getRunningModel(declarations.Type.LongRun, 23 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 90 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.NormalRun, 8 * 1000, declarations.Pace.Normal, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 80 * 60),
    declarations.getRunningModel(declarations.Type.LongRun, 25 * 1000, declarations.Pace.Low, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 100 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.NormalRun, 8 * 1000, declarations.Pace.Normal, null),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
    declarations.getRunningModel(declarations.Type.CalmRun, null, declarations.Pace.Low, 60 * 60),
    declarations.getRunningModel(declarations.Type.HalfMarathon, 25 * 1000, declarations.Pace.Low, 110 * 60),
    declarations.getRunningModel(declarations.Type.Rest, null, null, null),
].map((model, index) => {
    return { day: index, ...model };
});
